import textwrap

def menu():
    """Exibe o menu de op√ß√µes para o usu√°rio."""
    menu_texto = """
    ================== MENU =====================
    Bem vindo ao Cash Bankü™ô
    Por gentileza, escolha uma das op√ß√µes abaixo:

    [d]\tDepositarüí∞
    [s]\tSacarü§ë
    [e]\tExtratoüìä
    [nc]\tNova conta
    [lc]\tListar contas
    [nu]\tNovo usu√°rio
    [q]\tSair‚ùå
    => """
    return input(textwrap.dedent(menu_texto))

def depositar(saldo, valor, extrato, /):
    """
    Realiza a opera√ß√£o de dep√≥sito.
    Argumentos s√£o recebidos apenas por posi√ß√£o.
    Retorna o saldo e o extrato atualizados.
    """
    if valor > 0:
        saldo += valor
        extrato += f"Dep√≥sito:\tR$ {valor:.2f}\n"
        print("\n‚úÖ Dep√≥sito realizado com sucesso!")
    else:
        print("\n‚ùå Opera√ß√£o falhou! O valor informado √© inv√°lido.")
    
    return saldo, extrato

def sacar(*, saldo, valor, extrato, limite, numero_saques, limite_saques):
    """
    Realiza a opera√ß√£o de saque.
    Argumentos s√£o recebidos apenas por nome (keyword-only).
    Retorna o saldo, extrato e n√∫mero de saques atualizados.
    """
    excedeu_saldo = valor > saldo
    excedeu_limite = valor > limite
    excedeu_saques = numero_saques >= limite_saques

    if excedeu_saldo:
        print("\n‚ùå Opera√ß√£o falhou! Voc√™ n√£o tem saldo suficiente.")

    elif excedeu_limite:
        print(f"\n‚ùå Opera√ß√£o falhou! O valor do saque excede o limite de R$ {limite:.2f}.")

    elif excedeu_saques:
        print("\n‚ùå Opera√ß√£o falhou! N√∫mero m√°ximo de saques excedido.")

    elif valor > 0:
        saldo -= valor
        extrato += f"Saque:\t\tR$ {valor:.2f}\n"
        numero_saques += 1
        print("\n‚úÖ Saque realizado com sucesso!")

    else:
        print("\n‚ùå Opera√ß√£o falhou! O valor informado √© inv√°lido.")

    return saldo, extrato, numero_saques

def exibir_extrato(saldo, /, *, extrato):
    """
    Exibe o extrato da conta.
    Recebe 'saldo' por posi√ß√£o e 'extrato' por nome.
    """
    print("\n================= EXTRATOüìä =================")
    print("N√£o foram realizadas movimenta√ß√µes." if not extrato else extrato)
    print(f"\nSaldo:\t\tR$ {saldo:.2f}")
    print("==========================================")

def criar_usuario(usuarios):
    """Cria um novo usu√°rio (cliente) no sistema."""
    cpf = input("Informe o CPF (somente n√∫meros): ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        print("\n‚ùå J√° existe usu√°rio com esse CPF!")
        return

    nome = input("Informe o nome completo: ")
    data_nascimento = input("Informe a data de nascimento (dd-mm-aaaa): ")
    endereco = input("Informe o endere√ßo (logradouro, nro - bairro - cidade/sigla estado): ")

    usuarios.append({"nome": nome, "data_nascimento": data_nascimento, "cpf": cpf, "endereco": endereco})
    print("\n‚úÖ Usu√°rio criado com sucesso!")

def filtrar_usuario(cpf, usuarios):
    """Filtra um usu√°rio da lista pelo seu CPF."""
    usuarios_filtrados = [usuario for usuario in usuarios if usuario["cpf"] == cpf]
    return usuarios_filtrados[0] if usuarios_filtrados else None

def criar_conta(agencia, numero_conta, usuarios, contas):
    """Cria uma nova conta corrente no sistema."""
    cpf = input("Informe o CPF do usu√°rio: ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        contas.append({"agencia": agencia, "numero_conta": numero_conta, "usuario": usuario})
        print("\n‚úÖ Conta criada com sucesso!")
        return numero_conta + 1
    
    print("\n‚ùå Usu√°rio n√£o encontrado, fluxo de cria√ß√£o de conta encerrado!")
    return numero_conta

def listar_contas(contas):
    """Lista todas as contas cadastradas."""
    if not contas:
        print("\nNenhuma conta cadastrada.")
        return

    print("\n================= LISTA DE CONTAS =================")
    for conta in contas:
        linha = f"""\
            Ag√™ncia:\t{conta['agencia']}
            C/C:\t\t{conta['numero_conta']}
            Titular:\t{conta['usuario']['nome']}
        """
        print(textwrap.dedent(linha))
        print("-" * 45)

def main():
    """Fun√ß√£o principal que executa o sistema banc√°rio."""
    # Constantes
    LIMITE_SAQUES = 3
    AGENCIA = "0001"
    
    # Vari√°veis de estado
    saldo = 150.0
    limite = 500.0
    extrato = ""
    numero_saques = 0
    usuarios = []
    contas = []
    numero_conta_atual = 1

    while True:
        opcao = menu()

        if opcao == "d":
            valor = float(input("Informe o valor do dep√≥sito: R$ "))
            saldo, extrato = depositar(saldo, valor, extrato)

        elif opcao == "s":
            valor = float(input("Informe o valor do saque: R$ "))
            saldo, extrato, numero_saques = sacar(
                saldo=saldo,
                valor=valor,
                extrato=extrato,
                limite=limite,
                numero_saques=numero_saques,
                limite_saques=LIMITE_SAQUES,
            )

        elif opcao == "e":
            exibir_extrato(saldo, extrato=extrato)

        elif opcao == "nu":
            criar_usuario(usuarios)

        elif opcao == "nc":
            numero_conta_atual = criar_conta(AGENCIA, numero_conta_atual, usuarios, contas)

        elif opcao == "lc":
            listar_contas(contas)

        elif opcao == "q":
            print("\n‚úÖ Obrigado por ser cliente Cash Bank!üòç")
            break

        else:
            print("\n‚ùå Opera√ß√£o inv√°lida, por favor selecione novamente a opera√ß√£o desejada.")

# Ponto de entrada do programa
if __name__ == "__main__":
    main()